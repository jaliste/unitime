<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!-- 
 * UniTime 3.0 (University Course Timetabling & Student Sectioning Application)
 * Copyright (C) 2007, UniTime.org
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 -->

<hibernate-mapping package="org.unitime.timetable.model">
	<class
		name="CourseOffering"
		table="COURSE_OFFERING">

 		<cache include="non-lazy" usage="read-write"/>
 		
        <id
            name="uniqueId"
            column="UNIQUEID"
            type="java.lang.Long"
        >
            <generator class="org.unitime.commons.hibernate.id.UniqueIdGenerator">
                <param name="sequence">CRS_OFFR_SEQ</param>
            </generator>
        </id>
        

		<property
			name="isControl"
			column="IS_CONTROL"
			type="java.lang.Boolean"
			not-null="true"
		/>
		
		<property
			name="permId"
			column="PERM_ID"
			type="java.lang.String"
			not-null="true"
			length="20"
		/>
		
		<property
			name="projectedDemand"
			column="PROJ_DEMAND"
			type="java.lang.Integer"
			length="5"
		/>
 
		<property
			name="nbrExpectedStudents"
			column="NBR_EXPECTED_STDENTS"
			type="java.lang.Integer"
			length="10"
			not-null="true"
		/>

		<property
		    name="demand"
		    type="java.lang.Integer"
		    formula=" (select count(distinct cod.student_id) from %SCHEMA%.LASTLIKE_COURSE_DEMAND cod where cod.subject_area_id = subject_area_id and cod.course_nbr = course_nbr ) "
	    />

		<property
		    name="subjectAreaAbbv"
		    type="java.lang.String"
		    formula=" ( select sa.SUBJECT_AREA_ABBREVIATION from %SCHEMA%.subject_area sa where sa.uniqueid = subject_area_id ) "
	    />
		    
		<property
			name="courseNbr"
			column="COURSE_NBR"
			type="java.lang.String"
			not-null="true"
			length="10"
		/>			
 
		<property
			name="title"
			column="TITLE"
			type="java.lang.String"
			not-null="false"
			length="90"
		/>
		
		<property
			name="scheduleBookNote"
			column="SCHEDULE_BOOK_NOTE"
			type="java.lang.String"
			not-null="false"
			length="1000"
		/>

		<property
			name="externalUniqueId"
			column="EXTERNAL_UID"
			type="java.lang.String"
			not-null="false"
			length="40"
		/>
		
		<property
			name="UniqueIdRolledForwardFrom"
			column="UID_ROLLED_FWD_FROM"
			type="java.lang.Long"
			not-null="false"
			length="20"
		/>
		
		
		<properties 
			name="uniqueCourseNbr"
			unique="true">
	    
			<many-to-one
				name="subjectArea"
				class="SubjectArea"
				column="SUBJECT_AREA_ID"
				insert="false"
				update="false"
				not-null="true"
				foreign-key="FK_CRS_OFFR_SUBJECT_AREA"
			/>
			<property
				name="courseNbr"
				column="COURSE_NBR"
				type="java.lang.String"
				not-null="true"
				insert="false"
				update="false"
				length="10"
			/>			
		</properties>

		<!-- TODO Reservations functionality to be removed later -->
		<set
			name="acadAreaReservations"
			table="ACAD_AREA_RESERVATION"
			order-by="PRIORITY, ACAD_AREA"
			where="OWNER_CLASS_ID='U'"
			cascade="all-delete-orphan"
			inverse="true"
			lazy="true"
			>
	 		<cache include="non-lazy" usage="read-write"/> 		
			<key column="OWNER"/>
			<one-to-many class="AcadAreaReservation"/>
		</set>
		<!-- End -->
		
		<many-to-one
			name="subjectArea"
			class="SubjectArea"
			column="SUBJECT_AREA_ID"
			insert="true"
			update="true"
			not-null="true"
			foreign-key="FK_CRS_OFFR_SUBJECT_AREA"
		/>

		<many-to-one 
			name="instructionalOffering" 
			class="InstructionalOffering" 
			column="INSTR_OFFR_ID" 
			not-null="true"
			insert="true"
			update="true"
			foreign-key="FK_CRS_OFFR_INSTR_OFFR"
		/>
		
		<many-to-one
		    name="demandOffering"
		    class="CourseOffering"
		    column="DEMAND_OFFERING_ID"
		    not-null="false"
		    foreign-key="FK_COURSE_OFFR_DEMAND_OFFR"
		/>
		
		<many-to-one
		    name="demandOfferingType"
		    class="DemandOfferingType"
		    column="DEMAND_OFFERING_TYPE"
		    not-null="false"
		/>
		
	</class>
</hibernate-mapping>