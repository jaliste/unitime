<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!-- 
 * UniTime 3.1 (University Timetabling Application)
 * Copyright (C) 2008, UniTime LLC
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 -->

<hibernate-mapping package="org.unitime.timetable.model">
	<class
		name="ExamConflict"
		table="XCONFLICT"
		>

 		<cache include="non-lazy" usage="read-write"/>

		<id 
            name="uniqueId"
            column="UNIQUEID" 
            type="java.lang.Long">            
            <generator class="org.unitime.commons.hibernate.id.UniqueIdGenerator">
				<param name="sequence">PREF_GROUP_SEQ</param>
			</generator>
            
        </id>
        
		<property
			name="conflictType"
			column="CONFLICT_TYPE"
			type="java.lang.Integer"
			length="10"
			not-null="true"
		/>
		
		<property
			name="distance"
			column="DISTANCE"
			type="java.lang.Double"
			not-null="false"
		/>

		<property
			name="nrStudents"
			type="java.lang.Integer"
			formula="(select count(*) from %SCHEMA%.xconflict_student x where x.conflict_id = uniqueid)"
		/>

		<property
			name="nrInstructors"
			type="java.lang.Integer"
			formula="(select count(*) from %SCHEMA%.xconflict_instructor x where x.conflict_id = uniqueid)"
		/>

		<set
			name="exams"
			table="XCONFLICT_EXAM"
			lazy="false">
			<cache include="non-lazy" usage="read-write"/>
			<key column="CONFLICT_ID" foreign-key="FK_XCONFLICT_EX_CONF"/>
			<many-to-many
				class="Exam"
				column="EXAM_ID"
				foreign-key="FK_XCONFLICT_EX_EXAM"
				fetch="join"/>
		</set>

		<set
			name="students"
			table="XCONFLICT_STUDENT"
			lazy="true">
			<cache include="non-lazy" usage="read-write"/>
			<key column="CONFLICT_ID" foreign-key="FK_XCONFLICT_ST_CONF"/>
			<many-to-many
				class="Student"
				column="STUDENT_ID"
				foreign-key="FK_XCONFLICT_ST_STUDENT"/>
		</set>

		<set
			name="instructors"
			table="XCONFLICT_INSTRUCTOR"
			lazy="true">
			<cache include="non-lazy" usage="read-write"/>
			<key column="CONFLICT_ID" foreign-key="FK_XCONFLICT_IN_CONF"/>
			<many-to-many
				class="DepartmentalInstructor"
				column="INSTRUCTOR_ID"
				foreign-key="FK_XCONFLICT_IN_INSTRUCTOR"/>
		</set>
	</class>
</hibernate-mapping>
